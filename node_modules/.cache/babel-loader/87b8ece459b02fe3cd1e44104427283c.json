{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: {} // структура: { [id]: { ...товар, quantity } }\n\n};\nconst basketSlice = createSlice({\n  name: \"@@basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      const item = action.payload;\n\n      if (state.items[item.id]) {\n        state.items[item.id].quantity += 1;\n      } else {\n        state.items[item.id] = { ...item,\n          quantity: 1\n        };\n      }\n    },\n    incrementItem: (state, action) => {\n      const id = action.payload;\n\n      if (state.items[id]) {\n        state.items[id].quantity += 1;\n      }\n    },\n    decrementItem: (state, action) => {\n      const id = action.payload;\n\n      if (state.items[id]) {\n        if (state.items[id].quantity > 1) {\n          state.items[id].quantity -= 1;\n        } else {\n          delete state.items[id]; // удаляем, если кол-во 0\n        }\n      }\n    },\n    removeItem: (state, action) => {\n      delete state.items[action.payload];\n    }\n  }\n});\nexport const {\n  addToBasket,\n  incrementItem,\n  decrementItem,\n  removeItem\n} = basketSlice.actions; // export const selectBasketItems = (state) => Object.values(state.basket.items);\n\nexport const selectBasketItems = state => state.basket.items.length;\nexport const selectItemQuantity = (state, id) => {\n  var _state$basket$items$i;\n\n  return ((_state$basket$items$i = state.basket.items[id]) === null || _state$basket$items$i === void 0 ? void 0 : _state$basket$items$i.quantity) || 0;\n}; // export default basketSlice.reducer;\n\nexport const basketReducer = basketSlice.reducer;","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/desert-shop/src/features/CardBtn/addToBasket-slice.js"],"names":["createSlice","initialState","items","basketSlice","name","reducers","addToBasket","state","action","item","payload","id","quantity","incrementItem","decrementItem","removeItem","actions","selectBasketItems","basket","length","selectItemQuantity","basketReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY,CACR;;AADQ,CAArB;AAIA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,UADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;;AACA,UAAIH,KAAK,CAACL,KAAN,CAAYO,IAAI,CAACE,EAAjB,CAAJ,EAA0B;AACxBJ,QAAAA,KAAK,CAACL,KAAN,CAAYO,IAAI,CAACE,EAAjB,EAAqBC,QAArB,IAAiC,CAAjC;AACD,OAFD,MAEO;AACLL,QAAAA,KAAK,CAACL,KAAN,CAAYO,IAAI,CAACE,EAAjB,IAAuB,EAAE,GAAGF,IAAL;AAAWG,UAAAA,QAAQ,EAAE;AAArB,SAAvB;AACD;AACF,KARO;AASRC,IAAAA,aAAa,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAChC,YAAMG,EAAE,GAAGH,MAAM,CAACE,OAAlB;;AACA,UAAIH,KAAK,CAACL,KAAN,CAAYS,EAAZ,CAAJ,EAAqB;AACnBJ,QAAAA,KAAK,CAACL,KAAN,CAAYS,EAAZ,EAAgBC,QAAhB,IAA4B,CAA5B;AACD;AACF,KAdO;AAeRE,IAAAA,aAAa,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAChC,YAAMG,EAAE,GAAGH,MAAM,CAACE,OAAlB;;AACA,UAAIH,KAAK,CAACL,KAAN,CAAYS,EAAZ,CAAJ,EAAqB;AACnB,YAAIJ,KAAK,CAACL,KAAN,CAAYS,EAAZ,EAAgBC,QAAhB,GAA2B,CAA/B,EAAkC;AAChCL,UAAAA,KAAK,CAACL,KAAN,CAAYS,EAAZ,EAAgBC,QAAhB,IAA4B,CAA5B;AACD,SAFD,MAEO;AACL,iBAAOL,KAAK,CAACL,KAAN,CAAYS,EAAZ,CAAP,CADK,CACmB;AACzB;AACF;AACF,KAxBO;AAyBRI,IAAAA,UAAU,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC7B,aAAOD,KAAK,CAACL,KAAN,CAAYM,MAAM,CAACE,OAAnB,CAAP;AACD;AA3BO;AAHoB,CAAD,CAA/B;AAkCA,OAAO,MAAM;AAAEJ,EAAAA,WAAF;AAAeO,EAAAA,aAAf;AAA8BC,EAAAA,aAA9B;AAA6CC,EAAAA;AAA7C,IACXZ,WAAW,CAACa,OADP,C,CAGP;;AACA,OAAO,MAAMC,iBAAiB,GAAIV,KAAD,IAAWA,KAAK,CAACW,MAAN,CAAahB,KAAb,CAAmBiB,MAAxD;AACP,OAAO,MAAMC,kBAAkB,GAAG,CAACb,KAAD,EAAQI,EAAR;AAAA;;AAAA,SAChC,0BAAAJ,KAAK,CAACW,MAAN,CAAahB,KAAb,CAAmBS,EAAnB,iFAAwBC,QAAxB,KAAoC,CADJ;AAAA,CAA3B,C,CAGP;;AAEA,OAAO,MAAMS,aAAa,GAAGlB,WAAW,CAACmB,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: {}, // структура: { [id]: { ...товар, quantity } }\r\n};\r\n\r\nconst basketSlice = createSlice({\r\n  name: \"@@basket\",\r\n  initialState,\r\n  reducers: {\r\n    addToBasket: (state, action) => {\r\n      const item = action.payload;\r\n      if (state.items[item.id]) {\r\n        state.items[item.id].quantity += 1;\r\n      } else {\r\n        state.items[item.id] = { ...item, quantity: 1 };\r\n      }\r\n    },\r\n    incrementItem: (state, action) => {\r\n      const id = action.payload;\r\n      if (state.items[id]) {\r\n        state.items[id].quantity += 1;\r\n      }\r\n    },\r\n    decrementItem: (state, action) => {\r\n      const id = action.payload;\r\n      if (state.items[id]) {\r\n        if (state.items[id].quantity > 1) {\r\n          state.items[id].quantity -= 1;\r\n        } else {\r\n          delete state.items[id]; // удаляем, если кол-во 0\r\n        }\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      delete state.items[action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToBasket, incrementItem, decrementItem, removeItem } =\r\n  basketSlice.actions;\r\n\r\n// export const selectBasketItems = (state) => Object.values(state.basket.items);\r\nexport const selectBasketItems = (state) => state.basket.items.length;\r\nexport const selectItemQuantity = (state, id) =>\r\n  state.basket.items[id]?.quantity || 0;\r\n\r\n// export default basketSlice.reducer;\r\n\r\nexport const basketReducer = basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}