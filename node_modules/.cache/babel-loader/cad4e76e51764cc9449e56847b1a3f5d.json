{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [] // корзина\n\n};\nconst basketSlice = createSlice({\n  name: \"@@basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      const price = action.payload; // Проверка, есть ли уже шутка с таким id\n\n      const exists = state.items.some(item => item.price === price.price);\n\n      if (exists) {\n        // Если есть - ничего не делаем\n        return;\n      } // Добавляем новую шутку\n\n\n      state.items.push(price); // Обновляем название категории для оповещения\n    } // Можно добавить другие редукторы, например, для удаления\n\n  }\n});\nexport const {\n  addToBasket\n} = basketSlice.actions;\nexport const basketReducer = basketSlice.reducer;","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/desert-shop/src/features/CardBtn/addToBasket-slice.js"],"names":["createSlice","initialState","items","basketSlice","name","reducers","addToBasket","state","action","price","payload","exists","some","item","push","actions","basketReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY,CACR;;AADQ,CAArB;AAIA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,UADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMC,KAAK,GAAGD,MAAM,CAACE,OAArB,CAD8B,CAE9B;;AACA,YAAMC,MAAM,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACJ,KAAL,KAAeA,KAAK,CAACA,KAAhD,CAAf;;AACA,UAAIE,MAAJ,EAAY;AACV;AACA;AACD,OAP6B,CAQ9B;;;AACAJ,MAAAA,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAiBL,KAAjB,EAT8B,CAU9B;AACD,KAZO,CAaR;;AAbQ;AAHoB,CAAD,CAA/B;AAoBA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAkBH,WAAW,CAACY,OAApC;AACP,OAAO,MAAMC,aAAa,GAAGb,WAAW,CAACc,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [], // корзина\r\n};\r\n\r\nconst basketSlice = createSlice({\r\n  name: \"@@basket\",\r\n  initialState,\r\n  reducers: {\r\n    addToBasket: (state, action) => {\r\n      const price = action.payload;\r\n      // Проверка, есть ли уже шутка с таким id\r\n      const exists = state.items.some((item) => item.price === price.price);\r\n      if (exists) {\r\n        // Если есть - ничего не делаем\r\n        return;\r\n      }\r\n      // Добавляем новую шутку\r\n      state.items.push(price);\r\n      // Обновляем название категории для оповещения\r\n    },\r\n    // Можно добавить другие редукторы, например, для удаления\r\n  },\r\n});\r\n\r\nexport const { addToBasket } = basketSlice.actions;\r\nexport const basketReducer = basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}